{"ast":null,"code":"/**\n * Inspection Models and Interfaces\n */\n/**\n * Inspection status enum\n */\nexport var InspectionStatus = /*#__PURE__*/function (InspectionStatus) {\n  InspectionStatus[\"DRAFT\"] = \"draft\";\n  InspectionStatus[\"SCHEDULED\"] = \"scheduled\";\n  InspectionStatus[\"IN_PROGRESS\"] = \"in-progress\";\n  InspectionStatus[\"COMPLETED\"] = \"completed\";\n  InspectionStatus[\"CANCELLED\"] = \"cancelled\";\n  InspectionStatus[\"OVERDUE\"] = \"overdue\";\n  InspectionStatus[\"ON_HOLD\"] = \"on-hold\";\n  return InspectionStatus;\n}(InspectionStatus || {});\n/**\n * Inspection type enum - comprehensive list for all inspection types\n */\nexport var InspectionType = /*#__PURE__*/function (InspectionType) {\n  InspectionType[\"PRE_PURCHASE\"] = \"pre-purchase\";\n  InspectionType[\"PRE_LISTING\"] = \"pre-listing\";\n  InspectionType[\"NEW_CONSTRUCTION\"] = \"new-construction\";\n  InspectionType[\"WARRANTY\"] = \"warranty\";\n  InspectionType[\"ANNUAL\"] = \"annual\";\n  InspectionType[\"FOUR_POINT\"] = \"four-point\";\n  InspectionType[\"ROOF\"] = \"roof\";\n  InspectionType[\"POOL\"] = \"pool\";\n  InspectionType[\"WIND_MITIGATION\"] = \"wind-mitigation\";\n  InspectionType[\"MOLD\"] = \"mold\";\n  InspectionType[\"RADON\"] = \"radon\";\n  InspectionType[\"TERMITE\"] = \"termite\";\n  InspectionType[\"COMMERCIAL\"] = \"commercial\";\n  InspectionType[\"OTHER\"] = \"other\";\n  return InspectionType;\n}(InspectionType || {});\n/**\n * Property type enum\n */\nexport var PropertyType = /*#__PURE__*/function (PropertyType) {\n  PropertyType[\"SINGLE_FAMILY\"] = \"single-family\";\n  PropertyType[\"MULTI_FAMILY\"] = \"multi-family\";\n  PropertyType[\"CONDO\"] = \"condo\";\n  PropertyType[\"TOWNHOUSE\"] = \"townhouse\";\n  PropertyType[\"APARTMENT\"] = \"apartment\";\n  PropertyType[\"COMMERCIAL\"] = \"commercial\";\n  PropertyType[\"INDUSTRIAL\"] = \"industrial\";\n  PropertyType[\"VACANT_LAND\"] = \"vacant-land\";\n  PropertyType[\"OTHER\"] = \"other\";\n  return PropertyType;\n}(PropertyType || {});\n/**\n * Priority levels\n */\nexport var Priority = /*#__PURE__*/function (Priority) {\n  Priority[\"LOW\"] = \"low\";\n  Priority[\"MEDIUM\"] = \"medium\";\n  Priority[\"HIGH\"] = \"high\";\n  Priority[\"URGENT\"] = \"urgent\";\n  return Priority;\n}(Priority || {});\n/**\n * Severity levels for findings and defects\n */\nexport var Severity = /*#__PURE__*/function (Severity) {\n  Severity[\"MINOR\"] = \"minor\";\n  Severity[\"MODERATE\"] = \"moderate\";\n  Severity[\"MAJOR\"] = \"major\";\n  Severity[\"CRITICAL\"] = \"critical\";\n  Severity[\"SAFETY\"] = \"safety\";\n  return Severity;\n}(Severity || {});\n/**\n * Defect status enum\n */\nexport var DefectStatus = /*#__PURE__*/function (DefectStatus) {\n  DefectStatus[\"OPEN\"] = \"open\";\n  DefectStatus[\"IN_PROGRESS\"] = \"in-progress\";\n  DefectStatus[\"RESOLVED\"] = \"resolved\";\n  DefectStatus[\"DEFERRED\"] = \"deferred\";\n  DefectStatus[\"WONT_FIX\"] = \"wont-fix\";\n  return DefectStatus;\n}(DefectStatus || {});\n/**\n * Finding category enum\n */\nexport var FindingCategory = /*#__PURE__*/function (FindingCategory) {\n  FindingCategory[\"STRUCTURAL\"] = \"structural\";\n  FindingCategory[\"ELECTRICAL\"] = \"electrical\";\n  FindingCategory[\"PLUMBING\"] = \"plumbing\";\n  FindingCategory[\"HVAC\"] = \"hvac\";\n  FindingCategory[\"ROOFING\"] = \"roofing\";\n  FindingCategory[\"EXTERIOR\"] = \"exterior\";\n  FindingCategory[\"INTERIOR\"] = \"interior\";\n  FindingCategory[\"INSULATION\"] = \"insulation\";\n  FindingCategory[\"VENTILATION\"] = \"ventilation\";\n  FindingCategory[\"APPLIANCES\"] = \"appliances\";\n  FindingCategory[\"SAFETY\"] = \"safety\";\n  FindingCategory[\"OTHER\"] = \"other\";\n  return FindingCategory;\n}(FindingCategory || {});\n/**\n * Defect category enum\n */\nexport var DefectCategory = /*#__PURE__*/function (DefectCategory) {\n  DefectCategory[\"STRUCTURAL\"] = \"structural\";\n  DefectCategory[\"ELECTRICAL\"] = \"electrical\";\n  DefectCategory[\"PLUMBING\"] = \"plumbing\";\n  DefectCategory[\"HVAC\"] = \"hvac\";\n  DefectCategory[\"ROOFING\"] = \"roofing\";\n  DefectCategory[\"FOUNDATION\"] = \"foundation\";\n  DefectCategory[\"DRAINAGE\"] = \"drainage\";\n  DefectCategory[\"SAFETY\"] = \"safety\";\n  DefectCategory[\"COSMETIC\"] = \"cosmetic\";\n  DefectCategory[\"OTHER\"] = \"other\";\n  return DefectCategory;\n}(DefectCategory || {});\n/**\n * Helper functions for status and priority colors\n */\nexport function getStatusColor(status) {\n  switch (status) {\n    case InspectionStatus.COMPLETED:\n      return 'success';\n    case InspectionStatus.IN_PROGRESS:\n      return 'accent';\n    case InspectionStatus.SCHEDULED:\n      return 'primary';\n    case InspectionStatus.OVERDUE:\n    case InspectionStatus.CANCELLED:\n      return 'warn';\n    case InspectionStatus.ON_HOLD:\n      return 'gray';\n    case InspectionStatus.DRAFT:\n      return 'secondary';\n    default:\n      return 'primary';\n  }\n}\nexport function getPriorityColor(priority) {\n  switch (priority) {\n    case Priority.URGENT:\n      return 'error';\n    case Priority.HIGH:\n      return 'warn';\n    case Priority.MEDIUM:\n      return 'accent';\n    case Priority.LOW:\n      return 'primary';\n    default:\n      return 'primary';\n  }\n}\nexport function getStatusIcon(status) {\n  switch (status) {\n    case InspectionStatus.COMPLETED:\n      return 'check_circle';\n    case InspectionStatus.IN_PROGRESS:\n      return 'pending';\n    case InspectionStatus.SCHEDULED:\n      return 'schedule';\n    case InspectionStatus.CANCELLED:\n      return 'cancel';\n    case InspectionStatus.OVERDUE:\n      return 'error';\n    case InspectionStatus.ON_HOLD:\n      return 'pause_circle';\n    case InspectionStatus.DRAFT:\n      return 'edit';\n    default:\n      return 'help';\n  }\n}\n/**\n * Get severity color for UI display\n */\nexport function getSeverityColor(severity) {\n  switch (severity) {\n    case Severity.MINOR:\n      return 'primary';\n    case Severity.MODERATE:\n      return 'accent';\n    case Severity.MAJOR:\n      return 'warn';\n    case Severity.CRITICAL:\n      return 'warn';\n    case Severity.SAFETY:\n      return 'warn';\n    default:\n      return '';\n  }\n}\n/**\n * Format inspection status for display\n */\nexport function formatInspectionStatus(status) {\n  return status.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n}\n/**\n * Format inspection type for display\n */\nexport function formatInspectionType(type) {\n  return type.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n}\n/**\n * Calculate inspection duration\n */\nexport function calculateInspectionDuration(startTime, endTime) {\n  const start = new Date(startTime);\n  const end = endTime ? new Date(endTime) : new Date();\n  return Math.round((end.getTime() - start.getTime()) / (1000 * 60)); // minutes\n}\n/**\n * Check if inspection is overdue\n */\nexport function isInspectionOverdue(inspection) {\n  if (inspection.status === InspectionStatus.COMPLETED || inspection.status === InspectionStatus.CANCELLED) {\n    return false;\n  }\n  const scheduledDate = new Date(inspection.scheduledDate);\n  const now = new Date();\n  return scheduledDate < now;\n}\n/**\n * Get inspection progress percentage\n */\nexport function getInspectionProgress(inspection) {\n  switch (inspection.status) {\n    case InspectionStatus.DRAFT:\n      return 0;\n    case InspectionStatus.SCHEDULED:\n      return 25;\n    case InspectionStatus.IN_PROGRESS:\n      return 50;\n    case InspectionStatus.COMPLETED:\n      return 100;\n    case InspectionStatus.CANCELLED:\n    case InspectionStatus.OVERDUE:\n    case InspectionStatus.ON_HOLD:\n      return 0;\n    default:\n      return 0;\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}