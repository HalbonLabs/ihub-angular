{"ast":null,"code":"/**\n * API Endpoints Constants\n * Central location for all API endpoint definitions\n */\nexport const API_ENDPOINTS = {\n  // Authentication endpoints\n  AUTH: {\n    LOGIN: '/auth/login',\n    LOGOUT: '/auth/logout',\n    REGISTER: '/auth/register',\n    REFRESH_TOKEN: '/auth/refresh',\n    FORGOT_PASSWORD: '/auth/forgot-password',\n    RESET_PASSWORD: '/auth/reset-password',\n    VERIFY_EMAIL: '/auth/verify-email',\n    PROFILE: '/auth/profile',\n    CHANGE_PASSWORD: '/auth/change-password'\n  },\n  // User management endpoints\n  USERS: {\n    BASE: '/users',\n    LIST: '/users',\n    GET: id => `/users/${id}`,\n    CREATE: '/users',\n    UPDATE: id => `/users/${id}`,\n    DELETE: id => `/users/${id}`,\n    BULK_DELETE: '/users/bulk-delete',\n    SEARCH: '/users/search',\n    ROLES: '/users/roles',\n    PERMISSIONS: '/users/permissions',\n    AVATAR: id => `/users/${id}/avatar`\n  },\n  // Organization/Tenant endpoints\n  ORGANIZATIONS: {\n    BASE: '/organizations',\n    LIST: '/organizations',\n    GET: id => `/organizations/${id}`,\n    CREATE: '/organizations',\n    UPDATE: id => `/organizations/${id}`,\n    DELETE: id => `/organizations/${id}`,\n    USERS: id => `/organizations/${id}/users`,\n    SETTINGS: id => `/organizations/${id}/settings`,\n    SUBSCRIPTION: id => `/organizations/${id}/subscription`\n  },\n  // Inspection endpoints\n  INSPECTIONS: {\n    BASE: '/inspections',\n    LIST: '/inspections',\n    GET: id => `/inspections/${id}`,\n    CREATE: '/inspections',\n    UPDATE: id => `/inspections/${id}`,\n    DELETE: id => `/inspections/${id}`,\n    STATUS: id => `/inspections/${id}/status`,\n    ASSIGN: id => `/inspections/${id}/assign`,\n    FILES: id => `/inspections/${id}/files`,\n    UPLOAD_FILE: id => `/inspections/${id}/files/upload`,\n    DELETE_FILE: (id, fileId) => `/inspections/${id}/files/${fileId}`,\n    DEFECTS: id => `/inspections/${id}/defects`,\n    EXPORT: id => `/inspections/${id}/export`,\n    DUPLICATE: id => `/inspections/${id}/duplicate`,\n    HISTORY: id => `/inspections/${id}/history`,\n    COMMENTS: id => `/inspections/${id}/comments`,\n    SCHEDULE: id => `/inspections/${id}/schedule`\n  },\n  // Defects endpoints\n  DEFECTS: {\n    BASE: '/defects',\n    LIST: '/defects',\n    GET: id => `/defects/${id}`,\n    CREATE: '/defects',\n    UPDATE: id => `/defects/${id}`,\n    DELETE: id => `/defects/${id}`,\n    STATUS: id => `/defects/${id}/status`,\n    IMAGES: id => `/defects/${id}/images`,\n    CATEGORIES: '/defects/categories',\n    SEVERITY_LEVELS: '/defects/severity-levels'\n  },\n  // Reports endpoints\n  REPORTS: {\n    BASE: '/reports',\n    LIST: '/reports',\n    GENERATE: '/reports/generate',\n    TEMPLATES: '/reports/templates',\n    SCHEDULE: '/reports/schedule',\n    EXPORT: id => `/reports/${id}/export`,\n    PDF: id => `/reports/${id}/pdf`,\n    EXCEL: id => `/reports/${id}/excel`,\n    EMAIL: id => `/reports/${id}/email`,\n    ANALYTICS: '/reports/analytics'\n  },\n  // File management endpoints\n  FILES: {\n    BASE: '/files',\n    UPLOAD: '/files/upload',\n    UPLOAD_MULTIPLE: '/files/upload-multiple',\n    GET: id => `/files/${id}`,\n    DELETE: id => `/files/${id}`,\n    PRESIGNED_URL: '/files/presigned-url',\n    METADATA: id => `/files/${id}/metadata`,\n    DOWNLOAD: id => `/files/${id}/download`\n  },\n  // Dashboard endpoints\n  DASHBOARD: {\n    STATS: '/dashboard/stats',\n    RECENT_ACTIVITY: '/dashboard/recent-activity',\n    PENDING_INSPECTIONS: '/dashboard/pending-inspections',\n    PERFORMANCE_METRICS: '/dashboard/performance-metrics',\n    CHARTS_DATA: '/dashboard/charts-data',\n    WIDGETS: '/dashboard/widgets',\n    QUICK_STATS: '/dashboard/quick-stats'\n  },\n  // Calendar endpoints\n  CALENDAR: {\n    EVENTS: '/calendar/events',\n    CREATE_EVENT: '/calendar/events',\n    UPDATE_EVENT: id => `/calendar/events/${id}`,\n    DELETE_EVENT: id => `/calendar/events/${id}`,\n    AVAILABILITY: '/calendar/availability',\n    SCHEDULE: '/calendar/schedule',\n    CONFLICTS: '/calendar/conflicts'\n  },\n  // Notifications endpoints\n  NOTIFICATIONS: {\n    LIST: '/notifications',\n    UNREAD: '/notifications/unread',\n    MARK_AS_READ: id => `/notifications/${id}/read`,\n    MARK_ALL_AS_READ: '/notifications/mark-all-read',\n    DELETE: id => `/notifications/${id}`,\n    PREFERENCES: '/notifications/preferences',\n    SUBSCRIBE: '/notifications/subscribe',\n    UNSUBSCRIBE: '/notifications/unsubscribe'\n  },\n  // Admin endpoints\n  ADMIN: {\n    USERS: '/admin/users',\n    SYSTEM_SETTINGS: '/admin/settings',\n    AUDIT_LOGS: '/admin/audit-logs',\n    FEATURE_FLAGS: '/admin/feature-flags',\n    DATABASE_BACKUP: '/admin/backup',\n    SYSTEM_HEALTH: '/admin/health',\n    MAINTENANCE_MODE: '/admin/maintenance',\n    CACHE_CLEAR: '/admin/cache/clear',\n    EXPORT_DATA: '/admin/export',\n    IMPORT_DATA: '/admin/import'\n  },\n  // Search endpoints\n  SEARCH: {\n    GLOBAL: '/search',\n    INSPECTIONS: '/search/inspections',\n    USERS: '/search/users',\n    FILES: '/search/files',\n    DEFECTS: '/search/defects',\n    SUGGESTIONS: '/search/suggestions'\n  },\n  // Activity/Audit endpoints\n  ACTIVITY: {\n    LIST: '/activity',\n    USER: userId => `/activity/user/${userId}`,\n    INSPECTION: inspectionId => `/activity/inspection/${inspectionId}`,\n    ORGANIZATION: orgId => `/activity/organization/${orgId}`,\n    EXPORT: '/activity/export'\n  },\n  // Settings endpoints\n  SETTINGS: {\n    USER: '/settings/user',\n    ORGANIZATION: '/settings/organization',\n    SYSTEM: '/settings/system',\n    EMAIL_TEMPLATES: '/settings/email-templates',\n    NOTIFICATION_SETTINGS: '/settings/notifications',\n    PREFERENCES: '/settings/preferences',\n    THEMES: '/settings/themes'\n  },\n  // WebSocket events (for reference)\n  WS_EVENTS: {\n    // Incoming events\n    INSPECTION_UPDATED: 'inspection:updated',\n    INSPECTION_STATUS_CHANGED: 'inspection:status-changed',\n    DEFECT_CREATED: 'defect:created',\n    FILE_UPLOADED: 'file:uploaded',\n    USER_JOINED: 'user:joined',\n    USER_LEFT: 'user:left',\n    NOTIFICATION: 'notification',\n    // Outgoing events\n    JOIN_ROOM: 'join:room',\n    LEAVE_ROOM: 'leave:room',\n    SUBSCRIBE: 'subscribe',\n    UNSUBSCRIBE: 'unsubscribe'\n  }\n};\n// Helper function to construct full URL\nexport function getApiUrl(endpoint) {\n  // This will be replaced with environment.apiUrl in the service\n  return endpoint;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}