{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { DashboardWidgetComponent } from '../../../../shared/components/dashboard-widget/dashboard-widget.component';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/tabs\";\nfunction AnalyticsDashboardComponent_app_dashboard_widget_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-dashboard-widget\", 14);\n    i0.ɵɵlistener(\"refresh\", function AnalyticsDashboardComponent_app_dashboard_widget_19_Template_app_dashboard_widget_refresh_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onWidgetRefresh($event));\n    })(\"configure\", function AnalyticsDashboardComponent_app_dashboard_widget_19_Template_app_dashboard_widget_configure_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onWidgetConfigure($event));\n    })(\"remove\", function AnalyticsDashboardComponent_app_dashboard_widget_19_Template_app_dashboard_widget_remove_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onWidgetRemove($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const widget_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"config\", widget_r3)(\"ngClass\", \"grid-item-\" + widget_r3.size);\n  }\n}\nfunction AnalyticsDashboardComponent_app_dashboard_widget_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-dashboard-widget\", 14);\n    i0.ɵɵlistener(\"refresh\", function AnalyticsDashboardComponent_app_dashboard_widget_22_Template_app_dashboard_widget_refresh_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onWidgetRefresh($event));\n    })(\"configure\", function AnalyticsDashboardComponent_app_dashboard_widget_22_Template_app_dashboard_widget_configure_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onWidgetConfigure($event));\n    })(\"remove\", function AnalyticsDashboardComponent_app_dashboard_widget_22_Template_app_dashboard_widget_remove_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onWidgetRemove($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const widget_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"config\", widget_r5)(\"ngClass\", \"grid-item-\" + widget_r5.size);\n  }\n}\nfunction AnalyticsDashboardComponent_app_dashboard_widget_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-dashboard-widget\", 14);\n    i0.ɵɵlistener(\"refresh\", function AnalyticsDashboardComponent_app_dashboard_widget_25_Template_app_dashboard_widget_refresh_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onWidgetRefresh($event));\n    })(\"configure\", function AnalyticsDashboardComponent_app_dashboard_widget_25_Template_app_dashboard_widget_configure_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onWidgetConfigure($event));\n    })(\"remove\", function AnalyticsDashboardComponent_app_dashboard_widget_25_Template_app_dashboard_widget_remove_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onWidgetRemove($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const widget_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"config\", widget_r7)(\"ngClass\", \"grid-item-\" + widget_r7.size);\n  }\n}\nexport let AnalyticsDashboardComponent = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class AnalyticsDashboardComponent {\n    constructor() {\n      this.destroy$ = new Subject();\n      this.overviewWidgets = [];\n      this.performanceWidgets = [];\n      this.trendsWidgets = [];\n    }\n    ngOnInit() {\n      this.initializeWidgets();\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    initializeWidgets() {\n      this.overviewWidgets = [{\n        id: 'total-inspections',\n        title: 'Total Inspections',\n        type: 'metric',\n        size: 'small',\n        data: {\n          value: '1,247',\n          label: 'This Month',\n          change: '+12%',\n          changeType: 'increase'\n        },\n        refreshable: true\n      }, {\n        id: 'completion-rate',\n        title: 'Completion Rate',\n        type: 'metric',\n        size: 'small',\n        data: {\n          value: '94.7%',\n          label: 'Success Rate',\n          change: '+5.2%',\n          changeType: 'increase'\n        },\n        refreshable: true\n      }, {\n        id: 'monthly-trend',\n        title: 'Monthly Inspection Trend',\n        type: 'chart',\n        size: 'large',\n        chartType: 'line',\n        chartData: {\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n          datasets: [{\n            label: 'Inspections',\n            data: [850, 920, 1100, 980, 1200, 1247],\n            borderColor: '#3b82f6',\n            backgroundColor: 'rgba(59, 130, 246, 0.1)',\n            fill: true,\n            tension: 0.4\n          }]\n        },\n        refreshable: true,\n        configurable: true\n      }, {\n        id: 'avg-duration',\n        title: 'Avg Duration',\n        type: 'metric',\n        size: 'small',\n        data: {\n          value: '2.4h',\n          label: 'Per Inspection',\n          change: '-8min',\n          changeType: 'increase'\n        },\n        refreshable: true\n      }, {\n        id: 'pending-reviews',\n        title: 'Pending Reviews',\n        type: 'metric',\n        size: 'small',\n        data: {\n          value: '23',\n          label: 'Awaiting Action',\n          change: '-5',\n          changeType: 'increase'\n        },\n        refreshable: true\n      }, {\n        id: 'inspection-types',\n        title: 'Inspection Distribution',\n        type: 'chart',\n        size: 'large',\n        chartType: 'doughnut',\n        chartData: {\n          labels: ['Safety', 'Quality', 'Compliance', 'Maintenance', 'Other'],\n          datasets: [{\n            label: 'Inspections',\n            data: [35, 25, 20, 15, 5],\n            backgroundColor: ['#3b82f6', '#10b981', '#f59e0b', '#ef4444', '#8b5cf6']\n          }]\n        },\n        refreshable: true,\n        configurable: true\n      }, {\n        id: 'recent-activity',\n        title: 'Recent Activity',\n        type: 'list',\n        size: 'medium',\n        data: {\n          items: [{\n            title: 'Safety Inspection Completed',\n            subtitle: 'Building A - Floor 3',\n            value: '2m ago',\n            icon: 'fas fa-shield-check',\n            color: '#10b981'\n          }, {\n            title: 'Quality Review Pending',\n            subtitle: 'Manufacturing Unit B',\n            value: '15m ago',\n            icon: 'fas fa-clock',\n            color: '#f59e0b'\n          }, {\n            title: 'Compliance Check Failed',\n            subtitle: 'Warehouse C',\n            value: '1h ago',\n            icon: 'fas fa-exclamation-triangle',\n            color: '#ef4444'\n          }, {\n            title: 'Maintenance Scheduled',\n            subtitle: 'Equipment Room D',\n            value: '2h ago',\n            icon: 'fas fa-tools',\n            color: '#3b82f6'\n          }]\n        },\n        refreshable: true\n      }];\n      this.performanceWidgets = [{\n        id: 'performance-overview',\n        title: 'Performance Overview',\n        type: 'grid',\n        size: 'large',\n        data: {\n          items: [{\n            icon: 'fas fa-tachometer-alt',\n            value: '98.5%',\n            label: 'Uptime',\n            class: 'success'\n          }, {\n            icon: 'fas fa-users',\n            value: '34',\n            label: 'Active Users',\n            class: 'info'\n          }, {\n            icon: 'fas fa-chart-line',\n            value: '+15%',\n            label: 'Growth',\n            class: 'success'\n          }, {\n            icon: 'fas fa-server',\n            value: '12ms',\n            label: 'Response Time',\n            class: 'success'\n          }]\n        },\n        refreshable: true\n      }, {\n        id: 'response-times',\n        title: 'Response Time Trends',\n        type: 'chart',\n        size: 'large',\n        chartType: 'bar',\n        chartData: {\n          labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n          datasets: [{\n            label: 'Average Response Time (ms)',\n            data: [12, 19, 3, 5, 2, 3, 10],\n            backgroundColor: 'rgba(59, 130, 246, 0.8)',\n            borderColor: '#3b82f6',\n            borderWidth: 1\n          }]\n        },\n        refreshable: true,\n        configurable: true\n      }];\n      this.trendsWidgets = [{\n        id: 'yearly-comparison',\n        title: 'Year-over-Year Comparison',\n        type: 'chart',\n        size: 'xl',\n        chartType: 'line',\n        chartData: {\n          labels: ['Q1', 'Q2', 'Q3', 'Q4'],\n          datasets: [{\n            label: '2023',\n            data: [2500, 3200, 2800, 3500],\n            borderColor: '#3b82f6',\n            backgroundColor: 'rgba(59, 130, 246, 0.1)',\n            fill: false\n          }, {\n            label: '2024',\n            data: [2800, 3600, 3200, 4100],\n            borderColor: '#10b981',\n            backgroundColor: 'rgba(16, 185, 129, 0.1)',\n            fill: false\n          }]\n        },\n        refreshable: true,\n        configurable: true\n      }, {\n        id: 'department-breakdown',\n        title: 'Department Performance',\n        type: 'chart',\n        size: 'xl',\n        chartType: 'bar',\n        chartData: {\n          labels: ['Engineering', 'Manufacturing', 'Quality', 'Safety', 'Maintenance'],\n          datasets: [{\n            label: 'Completed',\n            data: [85, 92, 78, 96, 88],\n            backgroundColor: 'rgba(16, 185, 129, 0.8)'\n          }, {\n            label: 'Pending',\n            data: [15, 8, 22, 4, 12],\n            backgroundColor: 'rgba(245, 158, 11, 0.8)'\n          }]\n        },\n        refreshable: true,\n        configurable: true\n      }];\n    }\n    trackByWidget(index, widget) {\n      return widget.id;\n    }\n    onWidgetRefresh(widgetId) {\n      console.log('Refreshing widget:', widgetId);\n      // Implement widget refresh logic\n    }\n    onWidgetConfigure(widgetId) {\n      console.log('Configuring widget:', widgetId);\n      // Implement widget configuration logic\n    }\n    onWidgetRemove(widgetId) {\n      console.log('Removing widget:', widgetId);\n      // Implement widget removal logic\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function AnalyticsDashboardComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AnalyticsDashboardComponent)();\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AnalyticsDashboardComponent,\n      selectors: [[\"app-analytics-dashboard\"]],\n      decls: 26,\n      vars: 6,\n      consts: [[1, \"analytics-container\"], [1, \"analytics-header\"], [1, \"header-content\"], [1, \"header-actions\"], [\"mat-raised-button\", \"\", \"color\", \"primary\"], [\"mat-stroked-button\", \"\"], [1, \"analytics-tabs\"], [\"label\", \"Overview\"], [1, \"widgets-grid\", \"overview-grid\"], [3, \"config\", \"ngClass\", \"refresh\", \"configure\", \"remove\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"label\", \"Performance\"], [1, \"widgets-grid\", \"performance-grid\"], [\"label\", \"Trends\"], [1, \"widgets-grid\", \"trends-grid\"], [3, \"refresh\", \"configure\", \"remove\", \"config\", \"ngClass\"]],\n      template: function AnalyticsDashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\");\n          i0.ɵɵtext(4, \"Analytics Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\");\n          i0.ɵɵtext(6, \"Advanced data insights and performance metrics\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 3)(8, \"button\", 4)(9, \"mat-icon\");\n          i0.ɵɵtext(10, \"add\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(11, \" Add Widget \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"button\", 5)(13, \"mat-icon\");\n          i0.ɵɵtext(14, \"settings\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(15, \" Customize \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(16, \"mat-tab-group\", 6)(17, \"mat-tab\", 7)(18, \"div\", 8);\n          i0.ɵɵtemplate(19, AnalyticsDashboardComponent_app_dashboard_widget_19_Template, 1, 2, \"app-dashboard-widget\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"mat-tab\", 10)(21, \"div\", 11);\n          i0.ɵɵtemplate(22, AnalyticsDashboardComponent_app_dashboard_widget_22_Template, 1, 2, \"app-dashboard-widget\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"mat-tab\", 12)(24, \"div\", 13);\n          i0.ɵɵtemplate(25, AnalyticsDashboardComponent_app_dashboard_widget_25_Template, 1, 2, \"app-dashboard-widget\", 9);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(19);\n          i0.ɵɵproperty(\"ngForOf\", ctx.overviewWidgets)(\"ngForTrackBy\", ctx.trackByWidget);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.performanceWidgets)(\"ngForTrackBy\", ctx.trackByWidget);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.trendsWidgets)(\"ngForTrackBy\", ctx.trackByWidget);\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass, i1.NgForOf, MatCardModule, MatButtonModule, i2.MatButton, MatIconModule, i3.MatIcon, MatTabsModule, i4.MatTab, i4.MatTabGroup, DashboardWidgetComponent],\n      styles: [\".analytics-container[_ngcontent-%COMP%]{padding:2rem;background:linear-gradient(135deg,#f8fafc,#e2e8f0);min-height:calc(100vh - 64px)}.analytics-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:flex-start;margin-bottom:2rem;flex-wrap:wrap;gap:1rem}.analytics-header[_ngcontent-%COMP%]   .header-content[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:2.25rem;font-weight:700;color:#1f2937;margin:0 0 .5rem;background:linear-gradient(135deg,#1f2937,#4b5563);-webkit-background-clip:text;-webkit-text-fill-color:transparent;background-clip:text}.analytics-header[_ngcontent-%COMP%]   .header-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#6b7280;font-size:1.1rem;margin:0}.analytics-header[_ngcontent-%COMP%]   .header-actions[_ngcontent-%COMP%]{display:flex;gap:1rem;align-items:center}:is()   .mat-mdc-tab-header[_ngcontent-%COMP%]   .mat-mdc-tab-label-container[_ngcontent-%COMP%]{background:#fff;border-radius:12px;box-shadow:0 2px 8px #0000001a;padding:.25rem;margin-bottom:1rem}:is()   .mat-mdc-tab-header[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]{min-width:120px;border-radius:8px;font-weight:600}:is()   .mat-mdc-tab-header[_ngcontent-%COMP%]   .mat-mdc-tab.mdc-tab--active[_ngcontent-%COMP%]{background:linear-gradient(135deg,#3b82f6,#1d4ed8);color:#fff;box-shadow:0 2px 8px #3b82f64d}.widgets-grid[_ngcontent-%COMP%]{display:grid;gap:1.5rem}.widgets-grid.overview-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(auto-fit,minmax(300px,1fr));grid-template-areas:\\\"metric1 metric2 chart1\\\" \\\"metric3 metric4 chart1\\\" \\\"chart2 chart2 list1\\\"}.widgets-grid.performance-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(auto-fit,minmax(280px,1fr))}.widgets-grid.trends-grid[_ngcontent-%COMP%]{grid-template-columns:1fr 1fr;gap:2rem}.widgets-grid[_ngcontent-%COMP%]   .grid-item-small[_ngcontent-%COMP%], .widgets-grid[_ngcontent-%COMP%]   .grid-item-medium[_ngcontent-%COMP%]{grid-column:span 1}.widgets-grid[_ngcontent-%COMP%]   .grid-item-large[_ngcontent-%COMP%]{grid-column:span 2}.widgets-grid[_ngcontent-%COMP%]   .grid-item-xl[_ngcontent-%COMP%]{grid-column:span 3}@media (max-width: 1200px){.widgets-grid[_ngcontent-%COMP%]{grid-template-columns:repeat(auto-fit,minmax(280px,1fr))}.widgets-grid.overview-grid[_ngcontent-%COMP%]{grid-template-areas:none}.widgets-grid[_ngcontent-%COMP%]   .grid-item-large[_ngcontent-%COMP%], .widgets-grid[_ngcontent-%COMP%]   .grid-item-xl[_ngcontent-%COMP%]{grid-column:span 1}}@media (max-width: 768px){.analytics-container[_ngcontent-%COMP%]{padding:1rem}.analytics-header[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start}.analytics-header[_ngcontent-%COMP%]   .header-content[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:1.875rem}.widgets-grid[_ngcontent-%COMP%]{grid-template-columns:1fr}.widgets-grid[_ngcontent-%COMP%]   .grid-item-small[_ngcontent-%COMP%], .widgets-grid[_ngcontent-%COMP%]   .grid-item-medium[_ngcontent-%COMP%], .widgets-grid[_ngcontent-%COMP%]   .grid-item-large[_ngcontent-%COMP%], .widgets-grid[_ngcontent-%COMP%]   .grid-item-xl[_ngcontent-%COMP%]{grid-column:span 1}}\"]\n    }));\n  }\n  _staticBlock();\n  return AnalyticsDashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}