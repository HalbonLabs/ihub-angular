{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { Subject, takeUntil } from 'rxjs';\nimport { emailValidator, getErrorMessage } from '../../validators/auth.validators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../../core/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/checkbox\";\nimport * as i11 from \"@angular/material/icon\";\nimport * as i12 from \"@angular/material/progress-spinner\";\nimport * as i13 from \"@angular/material/divider\";\nfunction LoginComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.getError(\"email\"), \" \");\n  }\n}\nfunction LoginComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.getError(\"password\"), \" \");\n  }\n}\nfunction LoginComponent_mat_spinner_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 19);\n  }\n}\nfunction LoginComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"p\", 21);\n    i0.ɵɵtext(2, \"Demo Accounts (Development)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 22)(4, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_37_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.fillDemoCredentials(\"admin\"));\n    });\n    i0.ɵɵtext(5, \" Admin \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_37_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.fillDemoCredentials(\"inspector\"));\n    });\n    i0.ɵɵtext(7, \" Inspector \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_37_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.fillDemoCredentials(\"viewer\"));\n    });\n    i0.ɵɵtext(9, \" Viewer \");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class LoginComponent {\n    constructor(fb, authService, router, route, snackBar) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.route = route;\n      this.snackBar = snackBar;\n      this.loading = false;\n      this.hidePassword = true;\n      this.returnUrl = '/dashboard';\n      this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n      // Initialize form\n      this.loginForm = this.fb.group({\n        email: ['', [Validators.required, emailValidator()]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        rememberMe: [false]\n      });\n      // Get return URL from route parameters or default to dashboard\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/dashboard';\n      // Check if user is already logged in\n      this.authService.isAuthenticated$.pipe(takeUntil(this.destroy$)).subscribe(isAuthenticated => {\n        if (isAuthenticated) {\n          this.router.navigate([this.returnUrl]);\n        }\n      });\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    // Getters for form controls\n    get email() {\n      return this.loginForm.get('email');\n    }\n    get password() {\n      return this.loginForm.get('password');\n    }\n    // Get error message for form field\n    getError(fieldName) {\n      const control = this.loginForm.get(fieldName);\n      return getErrorMessage(control, fieldName.charAt(0).toUpperCase() + fieldName.slice(1));\n    }\n    onSubmit() {\n      if (this.loginForm.invalid) {\n        this.loginForm.markAllAsTouched();\n        return;\n      }\n      this.loading = true;\n      // Disable the form group to avoid value/validity churn during submit\n      this.loginForm.disable({\n        emitEvent: false\n      });\n      const {\n        email,\n        password,\n        rememberMe\n      } = this.loginForm.value;\n      this.authService.login({\n        email,\n        password,\n        rememberMe\n      }).pipe(takeUntil(this.destroy$)).subscribe({\n        next: response => {\n          this.snackBar.open(`Welcome back, ${response.user.fullName || response.user.email}!`, 'Close', {\n            duration: 3000,\n            panelClass: ['success-snackbar'],\n            horizontalPosition: 'end',\n            verticalPosition: 'bottom'\n          });\n          // Navigate to return URL or dashboard\n          this.router.navigateByUrl(this.returnUrl, {\n            replaceUrl: true\n          });\n        },\n        error: error => {\n          this.loading = false;\n          this.loginForm.enable({\n            emitEvent: false\n          });\n          let errorMessage = 'Login failed. Please check your credentials.';\n          if (error.message) {\n            errorMessage = error.message;\n          }\n          this.snackBar.open(errorMessage, 'Close', {\n            duration: 5000,\n            panelClass: ['error-snackbar'],\n            horizontalPosition: 'end',\n            verticalPosition: 'bottom'\n          });\n        },\n        complete: () => {\n          this.loading = false;\n          // Re-enable the form after completion (success path already navigates away)\n          if (this.loginForm.disabled) {\n            this.loginForm.enable({\n              emitEvent: false\n            });\n          }\n        }\n      });\n    }\n    // Demo login for testing\n    fillDemoCredentials(role) {\n      const credentials = {\n        admin: {\n          email: 'admin@ihub.com',\n          password: 'Admin@123'\n        },\n        inspector: {\n          email: 'inspector@ihub.com',\n          password: 'Inspector@123'\n        },\n        viewer: {\n          email: 'viewer@ihub.com',\n          password: 'Viewer@123'\n        }\n      };\n      this.loginForm.patchValue(credentials[role]);\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 38,\n      vars: 14,\n      consts: [[1, \"auth-card\", \"animate-fade-in\"], [1, \"text-center\", \"mb-6\"], [1, \"text-2xl\", \"font-bold\", \"text-gray-900\"], [1, \"text-sm\", \"text-gray-600\", \"mt-2\"], [\"routerLink\", \"/auth/register\", 1, \"text-primary-600\", \"hover:text-primary-700\", \"font-medium\"], [1, \"space-y-4\", 3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"outline\", 1, \"w-full\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Enter your email\", \"autocomplete\", \"email\"], [\"matPrefix\", \"\", 1, \"text-gray-400\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"placeholder\", \"Enter your password\", \"autocomplete\", \"current-password\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"type\", \"button\", 3, \"click\", \"disabled\"], [1, \"flex\", \"items-center\", \"justify-between\"], [\"formControlName\", \"rememberMe\", \"color\", \"primary\", 3, \"disabled\"], [\"routerLink\", \"/auth/forgot-password\", 1, \"text-sm\", \"text-primary-600\", \"hover:text-primary-700\", \"font-medium\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"w-full\", \"h-12\", 3, \"disabled\"], [\"diameter\", \"20\", \"class\", \"inline-block mr-2\", 4, \"ngIf\"], [1, \"my-6\"], [\"class\", \"space-y-2\", 4, \"ngIf\"], [\"diameter\", \"20\", 1, \"inline-block\", \"mr-2\"], [1, \"space-y-2\"], [1, \"text-sm\", \"text-gray-600\", \"text-center\", \"mb-3\"], [1, \"grid\", \"grid-cols-3\", \"gap-2\"], [\"mat-stroked-button\", \"\", \"type\", \"button\", 1, \"text-xs\", 3, \"click\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-header\", 1)(2, \"h2\", 2);\n          i0.ɵɵtext(3, \"Sign in to your account\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\", 3);\n          i0.ɵɵtext(5, \" Or \");\n          i0.ɵɵelementStart(6, \"a\", 4);\n          i0.ɵɵtext(7, \" create a new account \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(8, \"mat-card-content\")(9, \"form\", 5);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_9_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(10, \"mat-form-field\", 6)(11, \"mat-label\");\n          i0.ɵɵtext(12, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 7);\n          i0.ɵɵelementStart(14, \"mat-icon\", 8);\n          i0.ɵɵtext(15, \"email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(16, LoginComponent_mat_error_16_Template, 2, 1, \"mat-error\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"mat-form-field\", 6)(18, \"mat-label\");\n          i0.ɵɵtext(19, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"input\", 10);\n          i0.ɵɵelementStart(21, \"mat-icon\", 8);\n          i0.ɵɵtext(22, \"lock\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_23_listener() {\n            return ctx.hidePassword = !ctx.hidePassword;\n          });\n          i0.ɵɵelementStart(24, \"mat-icon\");\n          i0.ɵɵtext(25);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(26, LoginComponent_mat_error_26_Template, 2, 1, \"mat-error\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"div\", 12)(28, \"mat-checkbox\", 13);\n          i0.ɵɵtext(29, \" Remember me \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"a\", 14);\n          i0.ɵɵtext(31, \" Forgot password? \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(32, \"button\", 15);\n          i0.ɵɵtemplate(33, LoginComponent_mat_spinner_33_Template, 1, 0, \"mat-spinner\", 16);\n          i0.ɵɵelementStart(34, \"span\");\n          i0.ɵɵtext(35);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(36, \"mat-divider\", 17);\n          i0.ɵɵtemplate(37, LoginComponent_div_37_Template, 10, 0, \"div\", 18);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵattribute(\"disabled\", ctx.loading ? \"\" : null);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", (ctx.email == null ? null : ctx.email.touched) && (ctx.email == null ? null : ctx.email.errors));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"type\", ctx.hidePassword ? \"password\" : \"text\");\n          i0.ɵɵattribute(\"disabled\", ctx.loading ? \"\" : null);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.hidePassword ? \"visibility_off\" : \"visibility\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (ctx.password == null ? null : ctx.password.touched) && (ctx.password == null ? null : ctx.password.errors));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.loading || ctx.loginForm.invalid);\n          i0.ɵɵattribute(\"disabled\", ctx.loading || ctx.loginForm.invalid ? \"\" : null);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.loading ? \"Signing in...\" : \"Sign in\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n        }\n      },\n      dependencies: [CommonModule, i5.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, RouterLink, MatCardModule, i6.MatCard, i6.MatCardContent, i6.MatCardHeader, MatFormFieldModule, i7.MatFormField, i7.MatLabel, i7.MatError, i7.MatPrefix, i7.MatSuffix, MatInputModule, i8.MatInput, MatButtonModule, i9.MatButton, i9.MatIconButton, MatCheckboxModule, i10.MatCheckbox, MatIconModule, i11.MatIcon, MatProgressSpinnerModule, i12.MatProgressSpinner, MatSnackBarModule, MatDividerModule, i13.MatDivider],\n      styles: [\".auth-card[_ngcontent-%COMP%]{@apply shadow-xl rounded-lg;max-width:100%;padding:2rem}.auth-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]{@apply block;padding:0}.auth-card[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{@apply mb-2;}.auth-card[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]{@apply transition-all duration-200;}.auth-card[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:hover{@apply border-primary-200;}.auth-card[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%]:not([disabled]){@apply transition-all duration-200 transform;}.auth-card[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%]:not([disabled]):hover{@apply shadow-lg -translate-y-0.5;}\"]\n    }));\n  }\n  _staticBlock();\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}